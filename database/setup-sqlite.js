const fs = require('fs').promises;
const path = require('path');
const { initDatabase, query } = require('./config/database-sqlite');

async function setupDatabase() {
    console.log('üöÄ Iniciando configura√ß√£o do banco SQLite...');
    
    try {
        // Inicializar banco
        await initDatabase();
        console.log('‚úÖ Banco SQLite inicializado');
        
        // Ler e executar script de cria√ß√£o
        const createScript = await fs.readFile(path.join(__dirname, 'sql', 'create_sqlite.sql'), 'utf8');
        const statements = createScript.split(';').filter(stmt => stmt.trim());
        
        for (const statement of statements) {
            if (statement.trim()) {
                await query(statement);
            }
        }
        
        console.log('‚úÖ Tabelas criadas');
        
        // Inserir dados de exemplo
        await insertSampleData();
        console.log('‚úÖ Dados de exemplo inseridos');
        
        // Verificar dados
        const users = await query('SELECT COUNT(*) as count FROM users');
        const courses = await query('SELECT COUNT(*) as count FROM courses');
        const enrollments = await query('SELECT COUNT(*) as count FROM enrollments');
        
        console.log('\nüìä Estat√≠sticas do banco:');
        console.log(`üë• Usu√°rios: ${users[0].count}`);
        console.log(`üìö Cursos: ${courses[0].count}`);
        console.log(`üéì Matr√≠culas: ${enrollments[0].count}`);
        
        console.log('\nüéâ Configura√ß√£o conclu√≠da com sucesso!');
        console.log('üí° Execute "npm start" para iniciar a API');
        
    } catch (error) {
        console.error('‚ùå Erro na configura√ß√£o:', error.message);
        process.exit(1);
    }
}

async function insertSampleData() {
    // Inserir categorias
    await query(`INSERT OR IGNORE INTO categories (name, description, icon, color) VALUES 
        ('Frontend', 'Desenvolvimento de interfaces web', 'fas fa-code', '#667eea'),
        ('Backend', 'Desenvolvimento de servidores e APIs', 'fas fa-server', '#764ba2'),
        ('Mobile', 'Desenvolvimento de aplicativos m√≥veis', 'fas fa-mobile-alt', '#4facfe'),
        ('Matem√°tica', 'Matem√°tica e c√°lculos', 'fas fa-calculator', '#43e97b')`);
    
    // Inserir usu√°rios
    await query(`INSERT OR IGNORE INTO users (name, email, password, type, avatar, phone) VALUES 
        ('Maria Silva', 'maria@studyconnect.com', '$2b$10$hash1', 'teacher', 'images/profa.jpg', '(11) 99999-0001'),
        ('Carlos Souza', 'carlos@studyconnect.com', '$2b$10$hash2', 'teacher', 'images/Carlos.jpg', '(11) 99999-0002'),
        ('Jo√£o Santos', 'joao@email.com', '$2b$10$hash4', 'student', NULL, '(11) 99999-1001'),
        ('Admin User', 'admin@studyconnect.com', '$2b$10$hash6', 'admin', NULL, '(11) 99999-0000')`);
    
    // Inserir cursos
    await query(`INSERT OR IGNORE INTO courses (title, description, price, level, duration, image, teacher_id, category_id, rating, students_count, status) VALUES 
        ('HTML5 e CSS3 Moderno', 'Aprenda a criar sites modernos', 199.90, 'beginner', 1200, 'images/capa-front-end.jpg', 1, 1, 4.8, 1250, 'published'),
        ('JavaScript Avan√ßado', 'Domine JavaScript ES6+', 299.90, 'intermediate', 1800, 'images/Foto-programa√ß√£o Web.webp', 1, 1, 4.9, 890, 'published'),
        ('Node.js e APIs REST', 'Desenvolvimento backend', 349.90, 'intermediate', 2100, 'images/backend.jpg', 2, 2, 4.7, 650, 'published')`);
    
    // Inserir aulas
    await query(`INSERT OR IGNORE INTO lessons (course_id, title, content, duration, order_num, free) VALUES 
        (1, 'Introdu√ß√£o ao HTML5', 'Conceitos b√°sicos do HTML5', 45, 1, 1),
        (1, 'Formul√°rios HTML', 'Criando formul√°rios interativos', 60, 2, 1),
        (1, 'CSS Flexbox', 'Layout moderno com Flexbox', 70, 3, 0)`);
    
    // Inserir matr√≠culas
    await query(`INSERT OR IGNORE INTO enrollments (student_id, course_id, progress, completed) VALUES 
        (3, 1, 80.00, 0),
        (3, 2, 100.00, 1)`);
}

if (require.main === module) {
    setupDatabase();
}

module.exports = setupDatabase;